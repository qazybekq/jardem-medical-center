#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–µ—Ä—Å–∏–∏ 2.7
–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è –¥–ª—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞
"""

import sqlite3
import sys

def migrate_database():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –ë–î –¥–ª—è v2.7"""
    try:
        conn = sqlite3.connect('medical_center.db')
        cursor = conn.cursor()
        
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –ë–î –¥–ª—è v2.7...")
        
        # 1. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ source –≤ —Ç–∞–±–ª–∏—Ü—É appointments
        try:
            cursor.execute('''
                ALTER TABLE appointments 
                ADD COLUMN source VARCHAR(100) DEFAULT '–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ'
            ''')
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ 'source' –≤ —Ç–∞–±–ª–∏—Ü—É appointments")
        except sqlite3.OperationalError as e:
            if 'duplicate column name' in str(e).lower():
                print("‚ÑπÔ∏è  –ü–æ–ª–µ 'source' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ appointments")
            else:
                raise
        
        # 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ–ø–ª–∞—Ç –ø–æ –∫–∞–∂–¥–æ–π —É—Å–ª—É–≥–µ
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS appointment_service_payments (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                appointment_service_id INTEGER NOT NULL,
                payment_method VARCHAR(50) NOT NULL,
                amount DECIMAL(10,2) NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (appointment_service_id) REFERENCES appointment_services(id) ON DELETE CASCADE
            )
        ''')
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ 'appointment_service_payments'")
        
        # 3. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ payment_status –≤ —Ç–∞–±–ª–∏—Ü—É appointments
        try:
            cursor.execute('''
                ALTER TABLE appointments 
                ADD COLUMN payment_status VARCHAR(50) DEFAULT '–Ω–µ –æ–ø–ª–∞—á–µ–Ω–æ'
            ''')
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ 'payment_status' –≤ —Ç–∞–±–ª–∏—Ü—É appointments")
        except sqlite3.OperationalError as e:
            if 'duplicate column name' in str(e).lower():
                print("‚ÑπÔ∏è  –ü–æ–ª–µ 'payment_status' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ appointments")
            else:
                raise
        
        conn.commit()
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    success = migrate_database()
    sys.exit(0 if success else 1)

