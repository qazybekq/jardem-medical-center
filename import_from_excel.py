#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel —Ñ–∞–π–ª–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

import pandas as pd
import sqlite3
from datetime import datetime
import os

DB_NAME = 'medical_center.db'
TEMPLATE_DIR = 'excel_templates'

def get_connection():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    return sqlite3.connect(DB_NAME)

def import_clients(file_path):
    """–ò–º–ø–æ—Ä—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ Excel"""
    print("\n" + "=" * 60)
    print("üìã –ò–º–ø–æ—Ä—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤...")
    print("=" * 60)
    
    df = pd.read_excel(file_path)
    conn = get_connection()
    cursor = conn.cursor()
    
    success_count = 0
    error_count = 0
    
    for idx, row in df.iterrows():
        try:
            cursor.execute('''
                INSERT INTO clients (first_name, last_name, birth_date, phone, email)
                VALUES (?, ?, ?, ?, ?)
            ''', (
                row['first_name'],
                row['last_name'],
                row['birth_date'],
                row['phone'],
                row.get('email', '')
            ))
            success_count += 1
            print(f"   ‚úÖ {row['first_name']} {row['last_name']} - –¥–æ–±–∞–≤–ª–µ–Ω")
        except sqlite3.IntegrityError as e:
            error_count += 1
            print(f"   ‚ùå {row['first_name']} {row['last_name']} - –æ—à–∏–±–∫–∞: {e}")
        except Exception as e:
            error_count += 1
            print(f"   ‚ùå –°—Ç—Ä–æ–∫–∞ {idx + 2} - –æ—à–∏–±–∫–∞: {e}")
    
    conn.commit()
    conn.close()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count} —É—Å–ø–µ—à–Ω–æ, {error_count} –æ—à–∏–±–æ–∫")
    return success_count, error_count

def import_doctors(file_path):
    """–ò–º–ø–æ—Ä—Ç –≤—Ä–∞—á–µ–π –∏–∑ Excel"""
    print("\n" + "=" * 60)
    print("üë®‚Äç‚öïÔ∏è –ò–º–ø–æ—Ä—Ç –≤—Ä–∞—á–µ–π...")
    print("=" * 60)
    
    df = pd.read_excel(file_path)
    conn = get_connection()
    cursor = conn.cursor()
    
    success_count = 0
    error_count = 0
    
    for idx, row in df.iterrows():
        try:
            cursor.execute('''
                INSERT INTO doctors (first_name, last_name, specialization, phone, email)
                VALUES (?, ?, ?, ?, ?)
            ''', (
                row['first_name'],
                row['last_name'],
                row['specialization'],
                row['phone'],
                row.get('email', '')
            ))
            success_count += 1
            print(f"   ‚úÖ {row['first_name']} {row['last_name']} ({row['specialization']}) - –¥–æ–±–∞–≤–ª–µ–Ω")
        except sqlite3.IntegrityError as e:
            error_count += 1
            print(f"   ‚ùå {row['first_name']} {row['last_name']} - –æ—à–∏–±–∫–∞: {e}")
        except Exception as e:
            error_count += 1
            print(f"   ‚ùå –°—Ç—Ä–æ–∫–∞ {idx + 2} - –æ—à–∏–±–∫–∞: {e}")
    
    conn.commit()
    conn.close()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count} —É—Å–ø–µ—à–Ω–æ, {error_count} –æ—à–∏–±–æ–∫")
    return success_count, error_count

def import_services(file_path):
    """–ò–º–ø–æ—Ä—Ç —É—Å–ª—É–≥ –∏–∑ Excel"""
    print("\n" + "=" * 60)
    print("üè• –ò–º–ø–æ—Ä—Ç —É—Å–ª—É–≥...")
    print("=" * 60)
    
    df = pd.read_excel(file_path)
    conn = get_connection()
    cursor = conn.cursor()
    
    success_count = 0
    error_count = 0
    
    for idx, row in df.iterrows():
        try:
            # –ù–∞—Ö–æ–¥–∏–º ID –≤—Ä–∞—á–∞ –ø–æ —Ñ–∞–º–∏–ª–∏–∏
            cursor.execute('SELECT id FROM doctors WHERE last_name = ?', (row['doctor_last_name'],))
            doctor = cursor.fetchone()
            
            if not doctor:
                error_count += 1
                print(f"   ‚ùå {row['name']} - –≤—Ä–∞—á —Å —Ñ–∞–º–∏–ª–∏–µ–π '{row['doctor_last_name']}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                continue
            
            doctor_id = doctor[0]
            
            cursor.execute('''
                INSERT INTO services (name, price, doctor_id, duration_minutes)
                VALUES (?, ?, ?, ?)
            ''', (
                row['name'],
                row['price'],
                doctor_id,
                row['duration_minutes']
            ))
            success_count += 1
            print(f"   ‚úÖ {row['name']} ({row['price']} ‚Ç∏) - –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        except Exception as e:
            error_count += 1
            print(f"   ‚ùå –°—Ç—Ä–æ–∫–∞ {idx + 2} - –æ—à–∏–±–∫–∞: {e}")
    
    conn.commit()
    conn.close()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count} —É—Å–ø–µ—à–Ω–æ, {error_count} –æ—à–∏–±–æ–∫")
    return success_count, error_count

def import_appointments(file_path):
    """–ò–º–ø–æ—Ä—Ç –ø—Ä–∏–µ–º–æ–≤ –∏–∑ Excel"""
    print("\n" + "=" * 60)
    print("üìÖ –ò–º–ø–æ—Ä—Ç –ø—Ä–∏–µ–º–æ–≤...")
    print("=" * 60)
    
    df = pd.read_excel(file_path)
    conn = get_connection()
    cursor = conn.cursor()
    
    success_count = 0
    error_count = 0
    
    for idx, row in df.iterrows():
        try:
            # –ù–∞—Ö–æ–¥–∏–º ID –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ —Ñ–∞–º–∏–ª–∏–∏
            cursor.execute('SELECT id FROM clients WHERE last_name = ?', (row['client_last_name'],))
            client = cursor.fetchone()
            if not client:
                error_count += 1
                print(f"   ‚ùå –°—Ç—Ä–æ–∫–∞ {idx + 2} - –∫–ª–∏–µ–Ω—Ç '{row['client_last_name']}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                continue
            
            # –ù–∞—Ö–æ–¥–∏–º ID –≤—Ä–∞—á–∞ –ø–æ —Ñ–∞–º–∏–ª–∏–∏
            cursor.execute('SELECT id FROM doctors WHERE last_name = ?', (row['doctor_last_name'],))
            doctor = cursor.fetchone()
            if not doctor:
                error_count += 1
                print(f"   ‚ùå –°—Ç—Ä–æ–∫–∞ {idx + 2} - –≤—Ä–∞—á '{row['doctor_last_name']}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                continue
            
            # –ù–∞—Ö–æ–¥–∏–º ID —É—Å–ª—É–≥–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
            cursor.execute('SELECT id FROM services WHERE name = ?', (row['service_name'],))
            service = cursor.fetchone()
            if not service:
                error_count += 1
                print(f"   ‚ùå –°—Ç—Ä–æ–∫–∞ {idx + 2} - —É—Å–ª—É–≥–∞ '{row['service_name']}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                continue
            
            cursor.execute('''
                INSERT INTO appointments (client_id, doctor_id, service_id, appointment_date, 
                                        appointment_time, status, notes)
                VALUES (?, ?, ?, ?, ?, ?, ?)
            ''', (
                client[0],
                doctor[0],
                service[0],
                row['appointment_date'],
                row['appointment_time'],
                row['status'],
                row.get('notes', '')
            ))
            success_count += 1
            print(f"   ‚úÖ {row['appointment_date']} {row['appointment_time']} - {row['client_last_name']} ‚Üí {row['doctor_last_name']}")
        except Exception as e:
            error_count += 1
            print(f"   ‚ùå –°—Ç—Ä–æ–∫–∞ {idx + 2} - –æ—à–∏–±–∫–∞: {e}")
    
    conn.commit()
    conn.close()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count} —É—Å–ø–µ—à–Ω–æ, {error_count} –æ—à–∏–±–æ–∫")
    return success_count, error_count

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∞"""
    print("\n" + "=" * 60)
    print("üöÄ –ò–ú–ü–û–†–¢ –î–ê–ù–ù–´–• –ò–ó EXCEL –í –ë–ê–ó–£ –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ —Å —à–∞–±–ª–æ–Ω–∞–º–∏
    if not os.path.exists(TEMPLATE_DIR):
        print(f"\n‚ùå –û—à–∏–±–∫–∞: –ø–∞–ø–∫–∞ '{TEMPLATE_DIR}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print(f"   –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python create_excel_templates.py")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if not os.path.exists(DB_NAME):
        print(f"\n‚ùå –û—à–∏–±–∫–∞: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{DB_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print(f"   –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: streamlit run app.py")
        return
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_success = 0
    total_errors = 0
    
    # 1. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤
    clients_file = f'{TEMPLATE_DIR}/1_clients_template.xlsx'
    if os.path.exists(clients_file):
        success, errors = import_clients(clients_file)
        total_success += success
        total_errors += errors
    else:
        print(f"\n‚ö†Ô∏è –§–∞–π–ª {clients_file} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
    
    # 2. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–∞—á–µ–π
    doctors_file = f'{TEMPLATE_DIR}/2_doctors_template.xlsx'
    if os.path.exists(doctors_file):
        success, errors = import_doctors(doctors_file)
        total_success += success
        total_errors += errors
    else:
        print(f"\n‚ö†Ô∏è –§–∞–π–ª {doctors_file} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
    
    # 3. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É—Å–ª—É–≥–∏
    services_file = f'{TEMPLATE_DIR}/3_services_template.xlsx'
    if os.path.exists(services_file):
        success, errors = import_services(services_file)
        total_success += success
        total_errors += errors
    else:
        print(f"\n‚ö†Ô∏è –§–∞–π–ª {services_file} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
    
    # 4. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∏–µ–º—ã
    appointments_file = f'{TEMPLATE_DIR}/4_appointments_template.xlsx'
    if os.path.exists(appointments_file):
        success, errors = import_appointments(appointments_file)
        total_success += success
        total_errors += errors
    else:
        print(f"\n‚ö†Ô∏è –§–∞–π–ª {appointments_file} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("=" * 60)
    print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {total_success} –∑–∞–ø–∏—Å–µ–π")
    print(f"‚ùå –û—à–∏–±–æ–∫: {total_errors}")
    
    if total_errors == 0:
        print("\nüéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print(f"\n‚ö†Ô∏è –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å {total_errors} –æ—à–∏–±–∫–∞–º–∏")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã
    print("\n" + "=" * 60)
    print("üìä –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    conn = get_connection()
    cursor = conn.cursor()
    
    cursor.execute('SELECT COUNT(*) FROM clients')
    clients_count = cursor.fetchone()[0]
    print(f"\nüë• –ö–ª–∏–µ–Ω—Ç—ã: {clients_count}")
    
    cursor.execute('SELECT COUNT(*) FROM doctors')
    doctors_count = cursor.fetchone()[0]
    print(f"üë®‚Äç‚öïÔ∏è –í—Ä–∞—á–∏: {doctors_count}")
    
    cursor.execute('SELECT COUNT(*) FROM services')
    services_count = cursor.fetchone()[0]
    print(f"üè• –£—Å–ª—É–≥–∏: {services_count}")
    
    cursor.execute('SELECT COUNT(*) FROM appointments')
    appointments_count = cursor.fetchone()[0]
    print(f"üìÖ –ü—Ä–∏–µ–º—ã: {appointments_count}")
    
    conn.close()
    
    print("\n" + "=" * 60)
    print("‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("=" * 60)
    print("\nüí° –¢–µ–ø–µ—Ä—å –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: streamlit run app.py")

if __name__ == "__main__":
    main()

