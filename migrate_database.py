#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–ª–æ–Ω–æ–∫
"""

import sqlite3
import os

def migrate_database():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–ª–æ–Ω–æ–∫"""
    
    db_path = "medical_center.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å–Ω–∞—á–∞–ª–∞.")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ source
        cursor.execute("PRAGMA table_info(appointments)")
        columns = [column[1] for column in cursor.fetchall()]
        
        if 'source' not in columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É source –≤ —Ç–∞–±–ª–∏—Ü—É appointments...")
            cursor.execute("ALTER TABLE appointments ADD COLUMN source TEXT DEFAULT '–ø—Ä—è–º–æ–π'")
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ source –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        else:
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ source —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        if 'payment_status' not in columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É payment_status –≤ —Ç–∞–±–ª–∏—Ü—É appointments...")
            cursor.execute("ALTER TABLE appointments ADD COLUMN payment_status TEXT DEFAULT '–Ω–µ –æ–ø–ª–∞—á–µ–Ω'")
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ payment_status –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        else:
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ payment_status —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É appointment_service_payments –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS appointment_service_payments (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                appointment_service_id INTEGER NOT NULL,
                payment_method TEXT NOT NULL,
                amount DECIMAL(10,2) NOT NULL,
                payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                notes TEXT,
                FOREIGN KEY (appointment_service_id) REFERENCES appointment_services (id) ON DELETE CASCADE
            )
        ''')
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ appointment_service_payments —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
        print("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏...")
        cursor.execute("UPDATE appointments SET source = '–ø—Ä—è–º–æ–π' WHERE source IS NULL")
        cursor.execute("UPDATE appointments SET payment_status = '–Ω–µ –æ–ø–ª–∞—á–µ–Ω' WHERE payment_status IS NULL")
        
        conn.commit()
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False
    finally:
        if 'conn' in locals():
            conn.close()

if __name__ == "__main__":
    migrate_database()
