#!/usr/bin/env python3
"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel
"""

import streamlit as st
import pandas as pd
import os
from database import get_connection, create_client, create_appointment

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–º"""
    st.title("üì• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö")
    
    tab1, tab2, tab3 = st.tabs(["üì§ –ò–º–ø–æ—Ä—Ç", "üìã –®–∞–±–ª–æ–Ω—ã", "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"])
    
    with tab1:
        show_import_data()
    
    with tab2:
        show_templates()
    
    with tab3:
        show_instructions()

def show_import_data():
    """–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö"""
    st.subheader("üì§ –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel")
    
    import_type = st.radio(
        "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å?",
        options=["–ö–ª–∏–µ–Ω—Ç—ã", "–í—Ä–∞—á–∏", "–£—Å–ª—É–≥–∏", "–ü—Ä–∏–µ–º—ã"],
        key="import_type"
    )
    
    uploaded_file = st.file_uploader(
        f"–ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ ({import_type}):",
        type=['xlsx', 'xls'],
        key="import_file"
    )
    
    if uploaded_file is not None:
        try:
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
            df = pd.read_excel(uploaded_file)
            
            st.success(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: {len(df)} –∑–∞–ø–∏—Å–µ–π")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é
            st.subheader("üìã –ü—Ä–µ–≤—å—é –¥–∞–Ω–Ω—ã—Ö")
            st.dataframe(df.head(10), use_container_width=True)
            
            st.markdown("---")
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–ø–æ—Ä—Ç–∞
            st.subheader("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–ø–æ—Ä—Ç–∞")
            
            col1, col2 = st.columns(2)
            
            with col1:
                skip_duplicates = st.checkbox(
                    "–ü—Ä–æ–ø—É—Å–∫–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã",
                    value=True,
                    key="skip_duplicates"
                )
            
            with col2:
                show_errors = st.checkbox(
                    "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏",
                    value=True,
                    key="show_errors"
                )
            
            st.markdown("---")
            
            # –ö–Ω–æ–ø–∫–∞ –∏–º–ø–æ—Ä—Ç–∞
            col1, col2, col3 = st.columns(3)
            
            with col2:
                if st.button("üöÄ –ù–∞—á–∞—Ç—å –∏–º–ø–æ—Ä—Ç", type="primary", use_container_width=True):
                    import_data(df, import_type, skip_duplicates, show_errors)
        
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")

def import_data(df, import_type, skip_duplicates, show_errors):
    """–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É"""
    success_count = 0
    skip_count = 0
    error_count = 0
    errors = []
    
    progress_bar = st.progress(0)
    status_text = st.empty()
    
    for i, row in df.iterrows():
        status_text.text(f"–ò–º–ø–æ—Ä—Ç {i+1} –∏–∑ {len(df)}...")
        
        try:
            if import_type == "–ö–ª–∏–µ–Ω—Ç—ã":
                result = import_client(row, skip_duplicates)
            elif import_type == "–í—Ä–∞—á–∏":
                result = import_doctor(row, skip_duplicates)
            elif import_type == "–£—Å–ª—É–≥–∏":
                result = import_service(row, skip_duplicates)
            elif import_type == "–ü—Ä–∏–µ–º—ã":
                result = import_appointment(row, skip_duplicates)
            else:
                result = False
            
            if result == "skip":
                skip_count += 1
            elif result:
                success_count += 1
            else:
                error_count += 1
                errors.append((i+1, row.to_dict()))
        
        except Exception as e:
            error_count += 1
            errors.append((i+1, str(e)))
        
        progress_bar.progress((i + 1) / len(df))
    
    status_text.empty()
    progress_bar.empty()
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    st.markdown("---")
    st.subheader("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–º–ø–æ—Ä—Ç–∞")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric("‚úÖ –£—Å–ø–µ—à–Ω–æ", success_count)
    
    with col2:
        st.metric("‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ", skip_count)
    
    with col3:
        st.metric("‚ùå –û—à–∏–±–æ–∫", error_count)
    
    if show_errors and errors:
        st.markdown("---")
        st.subheader("‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫")
        
        for row_num, error_data in errors[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            st.error(f"–°—Ç—Ä–æ–∫–∞ {row_num}: {error_data}")

def import_client(row, skip_duplicates):
    """–ò–º–ø–æ—Ä—Ç –∫–ª–∏–µ–Ω—Ç–∞"""
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        if pd.isna(row.get('first_name')) or pd.isna(row.get('last_name')) or pd.isna(row.get('phone')):
            return False
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
        if skip_duplicates:
            conn = get_connection()
            cursor = conn.cursor()
            cursor.execute('SELECT id FROM clients WHERE phone = ?', (row['phone'],))
            if cursor.fetchone():
                conn.close()
                return "skip"
            conn.close()
        
        # –ò–º–ø–æ—Ä—Ç
        client_id = create_client(
            row['first_name'],
            row['last_name'],
            row.get('birth_date'),
            row['phone'],
            row.get('email')
        )
        
        return client_id is not None
    
    except Exception:
        return False

def import_doctor(row, skip_duplicates):
    """–ò–º–ø–æ—Ä—Ç –≤—Ä–∞—á–∞"""
    st.info("‚è≥ –ò–º–ø–æ—Ä—Ç –≤—Ä–∞—á–µ–π –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏")
    return "skip"

def import_service(row, skip_duplicates):
    """–ò–º–ø–æ—Ä—Ç —É—Å–ª—É–≥–∏"""
    st.info("‚è≥ –ò–º–ø–æ—Ä—Ç —É—Å–ª—É–≥ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏")
    return "skip"

def import_appointment(row, skip_duplicates):
    """–ò–º–ø–æ—Ä—Ç –ø—Ä–∏–µ–º–∞"""
    st.info("‚è≥ –ò–º–ø–æ—Ä—Ç –ø—Ä–∏–µ–º–æ–≤ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏")
    return "skip"

def show_templates():
    """–ü–æ–∫–∞–∑–∞—Ç—å —à–∞–±–ª–æ–Ω—ã –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞"""
    st.subheader("üìã –®–∞–±–ª–æ–Ω—ã –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞")
    
    st.info("""
    üí° **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö.**
    
    –®–∞–±–ª–æ–Ω—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ `excel_templates/`:
    - `1_clients_template.xlsx` - –ö–ª–∏–µ–Ω—Ç—ã
    - `2_doctors_template.xlsx` - –í—Ä–∞—á–∏
    - `3_services_template.xlsx` - –£—Å–ª—É–≥–∏
    - `4_appointments_template.xlsx` - –ü—Ä–∏–µ–º—ã
    """)
    
    st.markdown("---")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü
    st.subheader("üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü")
    
    with st.expander("üë• –ö–ª–∏–µ–Ω—Ç—ã (Clients)"):
        st.code("""
–ü–æ–ª—è:
- first_name (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) - –ò–º—è
- last_name (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) - –§–∞–º–∏–ª–∏—è
- birth_date - –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è (YYYY-MM-DD)
- phone (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —É–Ω–∏–∫–∞–ª—å–Ω–æ) - –¢–µ–ª–µ—Ñ–æ–Ω (+7XXXXXXXXXX)
- email - Email
        """)
    
    with st.expander("üë®‚Äç‚öïÔ∏è –í—Ä–∞—á–∏ (Doctors)"):
        st.code("""
–ü–æ–ª—è:
- first_name (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) - –ò–º—è
- last_name (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) - –§–∞–º–∏–ª–∏—è
- specialization - –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
- phone - –¢–µ–ª–µ—Ñ–æ–Ω
- email - Email
        """)
    
    with st.expander("üè• –£—Å–ª—É–≥–∏ (Services)"):
        st.code("""
–ü–æ–ª—è:
- name (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) - –ù–∞–∑–≤–∞–Ω–∏–µ
- description - –û–ø–∏—Å–∞–Ω–∏–µ
- price (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) - –¶–µ–Ω–∞ (—á–∏—Å–ª–æ)
- duration_minutes - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –º–∏–Ω—É—Ç–∞—Ö
- doctor_id (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) - ID –≤—Ä–∞—á–∞
        """)
    
    with st.expander("üìÖ –ü—Ä–∏–µ–º—ã (Appointments)"):
        st.code("""
–ü–æ–ª—è:
- client_id (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) - ID –∫–ª–∏–µ–Ω—Ç–∞
- doctor_id (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) - ID –≤—Ä–∞—á–∞
- service_id (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) - ID —É—Å–ª—É–≥–∏
- appointment_date (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) - –î–∞—Ç–∞ (YYYY-MM-DD)
- appointment_time (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) - –í—Ä–µ–º—è (HH:MM:SS)
- status - –°—Ç–∞—Ç—É—Å (–∑–∞–ø–∏—Å–∞–Ω/–Ω–∞ –ø—Ä–∏–µ–º–µ/–ø—Ä–∏–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω/–Ω–µ —è–≤–∏–ª—Å—è)
- notes - –ó–∞–º–µ—Ç–∫–∏
        """)

def show_instructions():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é"""
    st.subheader("üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏–º–ø–æ—Ä—Ç—É")
    
    st.markdown("""
    ## –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
    
    ### –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–∞
    1. –°–∫–∞—á–∞–π—Ç–µ —à–∞–±–ª–æ–Ω Excel –∏–∑ –ø–∞–ø–∫–∏ `excel_templates/`
    2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
    3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
    4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö (–¥–∞—Ç—ã, —Ç–µ–ª–µ—Ñ–æ–Ω—ã)
    
    ### –®–∞–≥ 2: –ó–∞–≥—Ä—É–∑–∫–∞
    1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–ò–º–ø–æ—Ä—Ç"
    2. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
    3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel —Ñ–∞–π–ª
    4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–µ–≤—å—é –¥–∞–Ω–Ω—ã—Ö
    
    ### –®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    1. –í—ã–±–µ—Ä–∏—Ç–µ "–ü—Ä–æ–ø—É—Å–∫–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã" –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫
    2. –í–∫–ª—é—á–∏—Ç–µ "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏" –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    
    ### –®–∞–≥ 4: –ò–º–ø–æ—Ä—Ç
    1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å –∏–º–ø–æ—Ä—Ç"
    2. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    
    ## ‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è
    
    - **–¢–µ–ª–µ—Ñ–æ–Ω—ã** –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `+7XXXXXXXXXX`
    - **–î–∞—Ç—ã** –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `YYYY-MM-DD`
    - **Email** –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º
    - **–î—É–±–ª–∏–∫–∞—Ç—ã** –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    
    ## üí° –°–æ–≤–µ—Ç—ã
    
    - –ù–∞—á–Ω–∏—Ç–µ —Å –Ω–µ–±–æ–ª—å—à–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    - –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –∏–º–ø–æ—Ä—Ç–æ–º
    - –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø–µ—Ä–µ–¥ –º–∞—Å—Å–æ–≤—ã–º –∏–º–ø–æ—Ä—Ç–æ–º
    - –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø–æ—Ä—è–¥–∫–µ: –í—Ä–∞—á–∏ ‚Üí –£—Å–ª—É–≥–∏ ‚Üí –ö–ª–∏–µ–Ω—Ç—ã ‚Üí –ü—Ä–∏–µ–º—ã
    """)

if __name__ == "__main__":
    main()

