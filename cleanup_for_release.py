#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Ä–µ–ª–∏–∑–∞
–£–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, –æ—Ç—á–µ—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –¥—Ä—É–≥–∏–µ –Ω–µ–Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
"""

import os
import shutil
from pathlib import Path

def cleanup_project():
    """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Ä–µ–ª–∏–∑–∞"""
    print("üßπ –û–ß–ò–°–¢–ö–ê –ü–†–û–ï–ö–¢–ê –î–õ–Ø –†–ï–õ–ò–ó–ê")
    print("=" * 50)
    
    # –§–∞–π–ª—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    files_to_remove = [
        # –û—Ç—á–µ—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        "BA_UX_CRUD_REPORT.md",
        "BUG_FIX_DUPLICATE_ELEMENTS.md", 
        "BUG_FIX_UI_AND_DATES.md",
        "BUG_FIX_UnboundLocalError.md",
        "BUSINESS_ANALYSIS_UX_AUDIT.md",
        "BUTTON_SIZE_FIX_v2.7.3.md",
        "CHANGELOG_v2.3.md",
        "CHANGELOG_v2.4.2.md",
        "CHANGELOG_v2.4.3.md",
        "CHANGELOG_v2.4.4_FINAL.md",
        "CHANGELOG_v2.7.2.md",
        "CHANGELOG_v2.7.md",
        "DATA_GENERATION_REPORT.md",
        "DELETE_FEATURE.md",
        "DEVELOPER_FINAL_FIXES.md",
        "DEVELOPER_FIXES_COLOR_CODING.md",
        "DEVELOPER_FIXES_REPORT.md",
        "DEVELOPER_FIXES_v2.4.1.md",
        "DEVELOPMENT_PLAN_CRUD_v3.0.md",
        "DEVELOPMENT_REPORT_STAGE1_v3.0.md",
        "EXCEL_IMPORT_GUIDE.md",
        "FINAL_COMPLETE_v2.4.2.md",
        "FINAL_CRUD_COMPLETE_v3.2.0.md",
        "FINAL_DEVELOPER_REPORT_v2.6.md",
        "FINAL_HANDOFF_TO_QA.md",
        "FINAL_PROJECT_SUMMARY.md",
        "FINAL_QA_REPORT.md",
        "FINAL_REPORT_COLOR_CODING_v2.4.md",
        "FINAL_REPORT_v2.4.1.md",
        "FINAL_REPORT_v2.4.3.md",
        "FINAL_REPORT_v2.4.4.md",
        "FINAL_STATUS_COMPLETE.md",
        "FINAL_STATUS.md",
        "OPTIMIZATION_REPORT.md",
        "PAYMENT_FIX_v2.7.1.md",
        "QA_CLICKABLE_CELLS_v2.4.3.md",
        "QA_COLOR_CODING_REPORT.md",
        "QA_COMPACT_CELLS_v2.4.5.md",
        "QA_COMPREHENSIVE_REPORT.md",
        "QA_FINAL_COLOR_v2.4.2.md",
        "QA_NEW_FEATURES_REPORT.md",
        "QA_PERFECT_CELLS_v2.4.4_FINAL.md",
        "QA_REPORT_COLORED_CELLS_v2.4.1.md",
        "QA_UNIFORM_CELLS_v2.4.4.md",
        "QUICK_FIXES_SUMMARY.md",
        "QUICK_START_SECURITY.md",
        "RESTORATION_REPORT.md",
        "SECURITY_FIXES_REPORT.md",
        "STAGE1_COMPLETE_v3.0.0.md",
        "STAGE2_COMPLETE_v3.1.0.md",
        "UX_IMPROVEMENT_REPORT.md",
        
        # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        "comprehensive_testing.py",
        "test_changes_v2.7.2.py",
        "generate_realistic_data.py",
        "create_excel_templates.py",
        "import_from_excel.py",
        "migrate_v2_7.py",
        "backup.py",
        "generate_secure_passwords.py",
        "generated_passwords.txt",
        
        # –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã
        "env.example",
    ]
    
    # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    dirs_to_remove = [
        "__pycache__",
        "tests",
        "backups",
    ]
    
    removed_files = 0
    removed_dirs = 0
    
    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã
    for file in files_to_remove:
        if os.path.exists(file):
            try:
                os.remove(file)
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {file}")
                removed_files += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {file}: {e}")
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file}")
    
    # –£–¥–∞–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    for dir_name in dirs_to_remove:
        if os.path.exists(dir_name):
            try:
                shutil.rmtree(dir_name)
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dir_name}")
                removed_dirs += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {dir_name}: {e}")
        else:
            print(f"‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {dir_name}")
    
    print("\n" + "=" * 50)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –û–ß–ò–°–¢–ö–ò:")
    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {removed_files}")
    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π: {removed_dirs}")
    print("üéâ –ü–†–û–ï–ö–¢ –û–ß–ò–©–ï–ù –î–õ–Ø –†–ï–õ–ò–ó–ê!")

def create_release_structure():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è —Ä–µ–ª–∏–∑–∞"""
    print("\nüìÅ –°–û–ó–î–ê–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –†–ï–õ–ò–ó–ê")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–ª–∏–∑–∞
    release_dir = "release_v3.2.0"
    if not os.path.exists(release_dir):
        os.makedirs(release_dir)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {release_dir}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    essential_files = [
        "app.py",
        "auth.py", 
        "database.py",
        "crm_system.py",
        "analytics_dashboard.py",
        "directories.py",
        "user_management.py",
        "audit_viewer.py",
        "backup_manager.py",
        "notification_manager.py",
        "notifications.py",
        "import_manager.py",
        "validators.py",
        "requirements.txt",
        "README.md",
        "USAGE_GUIDE.md",
        "DEPLOYMENT_GUIDE.md",
        "QUICK_DEPLOY.md",
        "TESTING_REPORT_FINAL.md",
        "deploy.sh",
        ".streamlit/config.toml",
        ".streamlit/secrets.toml",
        ".gitignore"
    ]
    
    copied_files = 0
    
    for file in essential_files:
        if os.path.exists(file):
            try:
                # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                dest_path = os.path.join(release_dir, file)
                dest_dir = os.path.dirname(dest_path)
                if dest_dir and not os.path.exists(dest_dir):
                    os.makedirs(dest_dir)
                
                shutil.copy2(file, dest_path)
                print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: {file}")
                copied_files += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è {file}: {e}")
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º excel_templates –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if os.path.exists("excel_templates"):
        try:
            shutil.copytree("excel_templates", os.path.join(release_dir, "excel_templates"))
            print("‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: excel_templates")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è excel_templates: {e}")
    
    print(f"\nüìä –°–ö–û–ü–ò–†–û–í–ê–ù–û –§–ê–ô–õ–û–í: {copied_files}")
    print(f"üìÅ –†–ï–õ–ò–ó –ì–û–¢–û–í –í –î–ò–†–ï–ö–¢–û–†–ò–ò: {release_dir}")

if __name__ == "__main__":
    cleanup_project()
    create_release_structure()
    print("\nüéâ –ü–†–û–ï–ö–¢ –ì–û–¢–û–í –ö –†–ï–õ–ò–ó–£!")
